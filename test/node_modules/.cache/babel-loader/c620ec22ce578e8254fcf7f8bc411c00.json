{"ast":null,"code":"import _classCallCheck from \"/Users/knowledge/Developer/chatbot-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/knowledge/Developer/chatbot-ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/knowledge/Developer/chatbot-ui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/knowledge/Developer/chatbot-ui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/knowledge/Developer/chatbot-ui/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/knowledge/Developer/chatbot-ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/knowledge/Developer/chatbot-ui/src/components/ChatbotContainer.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  margin: auto;\\n  display: flex;\\n  flex-wrap: wrap;\\n  align-content: flex-start;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 10px;\\n  width: 50vw;\\n  height: 100vh;\\n  background-color: gray;\\n  margin: auto;\\n  display: flex;\\n  flex-wrap: wrap;\\n  align-content: space-between;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Message from './Message';\nimport Input from './Input';\nvar client = axios.create({\n  baseURL: 'https://tjh05l55r4.execute-api.eu-west-1.amazonaws.com/dev/dialogflow',\n  timeout: 1000\n});\nclient.post('/dialogflow', {\n  query: 'test',\n  sessionId: '1'\n}).then(function (res) {\n  return console.log(res);\n}).catch(function (err) {\n  return console.error(err);\n});\nvar Container = styled.div(_templateObject());\nvar MessageContainer = styled.div(_templateObject2());\n\nvar ChatbotContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChatbotContainer, _Component);\n\n  function ChatbotContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChatbotContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChatbotContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      messages: [{\n        text: 'Hola',\n        user: false\n      }, {\n        text: 'Hola!',\n        user: true\n      }, {\n        text: 'Que tal?',\n        user: false\n      }]\n    };\n\n    _this.addMessage = function (text, user) {\n      _this.setState({\n        messages: _this.state.messages.concat({\n          text: text,\n          user: user\n        })\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ChatbotContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(MessageContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.state.messages.map(function (msg) {\n        return React.createElement(Message, Object.assign({}, msg, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }));\n      })), React.createElement(Input, {\n        addMessage: this.addMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ChatbotContainer;\n}(Component);\n\nexport default ChatbotContainer;","map":{"version":3,"sources":["/Users/knowledge/Developer/chatbot-ui/src/components/ChatbotContainer.js"],"names":["React","Component","axios","styled","Message","Input","client","create","baseURL","timeout","post","query","sessionId","then","res","console","log","catch","err","error","Container","div","MessageContainer","ChatbotContainer","state","messages","text","user","addMessage","setState","concat","map","msg"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,IAAMC,MAAM,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE,uEADiB;AAE1BC,EAAAA,OAAO,EAAE;AAFiB,CAAb,CAAf;AAIAH,MAAM,CAACI,IAAP,CAAY,aAAZ,EAA2B;AACzBC,EAAAA,KAAK,EAAE,MADkB;AAEzBC,EAAAA,SAAS,EAAE;AAFc,CAA3B,EAGGC,IAHH,CAGQ,UAAAC,GAAG;AAAA,SAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,CAHX,EAICG,KAJD,CAIO,UAAAC,GAAG;AAAA,SAAIH,OAAO,CAACI,KAAR,CAAcD,GAAd,CAAJ;AAAA,CAJV;AAMA,IAAME,SAAS,GAAGjB,MAAM,CAACkB,GAAV,mBAAf;AAUA,IAAMC,gBAAgB,GAAGnB,MAAM,CAACkB,GAAV,oBAAtB;;IASME,gB;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,IAAI,EAAE,MADR;AAEEC,QAAAA,IAAI,EAAE;AAFR,OADQ,EAKR;AACED,QAAAA,IAAI,EAAE,OADR;AAEEC,QAAAA,IAAI,EAAE;AAFR,OALQ,EASR;AACED,QAAAA,IAAI,EAAE,UADR;AAEEC,QAAAA,IAAI,EAAE;AAFR,OATQ;AADJ,K;;UAiBRC,U,GAAa,UAACF,IAAD,EAAOC,IAAP,EAAgB;AAC3B,YAAKE,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAE,MAAKD,KAAL,CAAWC,QAAX,CAAoBK,MAApB,CAA2B;AAAEJ,UAAAA,IAAI,EAAJA,IAAF;AAAQC,UAAAA,IAAI,EAAJA;AAAR,SAA3B;AAAZ,OAAd;AACD,K;;;;;;;6BAEQ;AACP,aACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKH,KAAL,CAAWC,QAAX,CAAoBM,GAApB,CAAwB,UAAAC,GAAG;AAAA,eAC1B,oBAAC,OAAD,oBAAaA,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAD0B;AAAA,OAA3B,CADH,CADF,EAME,oBAAC,KAAD;AAAO,QAAA,UAAU,EAAE,KAAKJ,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAUD;;;;EAjC4B3B,S;;AAoC/B,eAAesB,gBAAf","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport Message from './Message'\nimport Input from './Input'\n\nconst client = axios.create({\n  baseURL: 'https://tjh05l55r4.execute-api.eu-west-1.amazonaws.com/dev/dialogflow',\n  timeout: 1000\n})\nclient.post('/dialogflow', {\n  query: 'test',\n  sessionId: '1'\n}).then(res => console.log(res))\n.catch(err => console.error(err))\n\nconst Container = styled.div`\n  padding: 10px;\n  width: 50vw;\n  height: 100vh;\n  background-color: gray;\n  margin: auto;\n  display: flex;\n  flex-wrap: wrap;\n  align-content: space-between;\n`\nconst MessageContainer = styled.div`\n  width: 100%;\n  margin: auto;\n  display: flex;\n  flex-wrap: wrap;\n  align-content: flex-start;\n`\n\n\nclass ChatbotContainer extends Component {\n  state = {\n    messages: [\n      {\n        text: 'Hola',\n        user: false\n      },\n      {\n        text: 'Hola!',\n        user: true\n      },\n      {\n        text: 'Que tal?',\n        user: false\n      }\n    ]\n  }\n\n  addMessage = (text, user) => {\n    this.setState({ messages: this.state.messages.concat({ text, user })})\n  }\n\n  render() {\n    return (\n      <Container>\n        <MessageContainer>\n          {this.state.messages.map(msg =>\n            <Message {...msg} />\n          )}\n        </MessageContainer>\n        <Input addMessage={this.addMessage} />\n      </Container>\n    )\n  }\n}\n\nexport default ChatbotContainer\n"]},"metadata":{},"sourceType":"module"}