{"ast":null,"code":"import _regeneratorRuntime from \"/Users/knowledge/Developer/chatbot-ui/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/knowledge/Developer/chatbot-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/knowledge/Developer/chatbot-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/knowledge/Developer/chatbot-ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/knowledge/Developer/chatbot-ui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/knowledge/Developer/chatbot-ui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/knowledge/Developer/chatbot-ui/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/knowledge/Developer/chatbot-ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/knowledge/Developer/chatbot-ui/src/components/ChatbotContainer.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  margin: auto;\\n  display: flex;\\n  flex-wrap: wrap;\\n  align-content: flex-start;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 10px;\\n  width: 50vw;\\n  height: 100vh;\\n  background-color: gray;\\n  margin: auto;\\n  display: flex;\\n  flex-wrap: wrap;\\n  align-content: space-between;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Message from './Message';\nimport Input from './Input';\nvar client = axios.create({\n  baseURL: 'https://tjh05l55r4.execute-api.eu-west-1.amazonaws.com/dev',\n  timeout: 1000\n});\nvar Container = styled.div(_templateObject());\nvar MessageContainer = styled.div(_templateObject2());\n\nvar ChatbotContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChatbotContainer, _Component);\n\n  function ChatbotContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChatbotContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChatbotContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      messages: [{\n        text: 'Hola',\n        user: false\n      }, {\n        text: 'Hola!',\n        user: true\n      }, {\n        text: 'Que tal?',\n        user: false\n      }]\n    };\n\n    _this.addMessage =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(text, user) {\n        var _ref2, data, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, msg;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return client.post('/dialogflow', {\n                  query: text,\n                  sessionId: '1'\n                });\n\n              case 3:\n                _ref2 = _context.sent;\n                data = _ref2.data;\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context.prev = 8;\n\n                for (_iterator = data[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  msg = _step.value;\n\n                  _this.setState({\n                    messages: _this.state.messages.concat({\n                      text: msg.message,\n                      user: user\n                    })\n                  });\n                }\n\n                _context.next = 16;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](8);\n                _didIteratorError = true;\n                _iteratorError = _context.t0;\n\n              case 16:\n                _context.prev = 16;\n                _context.prev = 17;\n\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n\n              case 19:\n                _context.prev = 19;\n\n                if (!_didIteratorError) {\n                  _context.next = 22;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 22:\n                return _context.finish(19);\n\n              case 23:\n                return _context.finish(16);\n\n              case 24:\n                _context.next = 29;\n                break;\n\n              case 26:\n                _context.prev = 26;\n                _context.t1 = _context[\"catch\"](0);\n                console.error(_context.t1);\n\n              case 29:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 26], [8, 12, 16, 24], [17,, 19, 23]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(ChatbotContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(MessageContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.state.messages.map(function (msg) {\n        return React.createElement(Message, Object.assign({}, msg, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }));\n      })), React.createElement(Input, {\n        addMessage: this.addMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ChatbotContainer;\n}(Component);\n\nexport default ChatbotContainer;","map":{"version":3,"sources":["/Users/knowledge/Developer/chatbot-ui/src/components/ChatbotContainer.js"],"names":["React","Component","axios","styled","Message","Input","client","create","baseURL","timeout","Container","div","MessageContainer","ChatbotContainer","state","messages","text","user","addMessage","post","query","sessionId","data","msg","setState","concat","message","console","error","map"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,IAAMC,MAAM,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE,4DADiB;AAE1BC,EAAAA,OAAO,EAAE;AAFiB,CAAb,CAAf;AAKA,IAAMC,SAAS,GAAGP,MAAM,CAACQ,GAAV,mBAAf;AAWA,IAAMC,gBAAgB,GAAGT,MAAM,CAACQ,GAAV,oBAAtB;;IAQME,gB;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,IAAI,EAAE,MADR;AAEEC,QAAAA,IAAI,EAAE;AAFR,OADQ,EAKR;AACED,QAAAA,IAAI,EAAE,OADR;AAEEC,QAAAA,IAAI,EAAE;AAFR,OALQ,EASR;AACED,QAAAA,IAAI,EAAE,UADR;AAEEC,QAAAA,IAAI,EAAE;AAFR,OATQ;AADJ,K;;UAiBRC,U;;;;;+BAAa,iBAAOF,IAAP,EAAaC,IAAb;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEcX,MAAM,CAACa,IAAP,CAAY,aAAZ,EAA2B;AAChDC,kBAAAA,KAAK,EAAEJ,IADyC;AAEhDK,kBAAAA,SAAS,EAAE;AAFqC,iBAA3B,CAFd;;AAAA;AAAA;AAEDC,gBAAAA,IAFC,SAEDA,IAFC;AAAA;AAAA;AAAA;AAAA;;AAMT,iCAAiBA,IAAjB,uHAAuB;AAAbC,kBAAAA,GAAa;;AACrB,wBAAKC,QAAL,CAAc;AAAET,oBAAAA,QAAQ,EAAE,MAAKD,KAAL,CAAWC,QAAX,CAAoBU,MAApB,CAA2B;AAAET,sBAAAA,IAAI,EAAEO,GAAG,CAACG,OAAZ;AAAqBT,sBAAAA,IAAI,EAAJA;AAArB,qBAA3B;AAAZ,mBAAd;AACD;;AARQ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUTU,gBAAAA,OAAO,CAACC,KAAR;;AAVS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BAcJ;AACP,aACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKd,KAAL,CAAWC,QAAX,CAAoBc,GAApB,CAAwB,UAAAN,GAAG;AAAA,eAC1B,oBAAC,OAAD,oBAAaA,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAD0B;AAAA,OAA3B,CADH,CADF,EAME,oBAAC,KAAD;AAAO,QAAA,UAAU,EAAE,KAAKL,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAUD;;;;EA3C4BjB,S;;AA8C/B,eAAeY,gBAAf","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport Message from './Message'\nimport Input from './Input'\n\nconst client = axios.create({\n  baseURL: 'https://tjh05l55r4.execute-api.eu-west-1.amazonaws.com/dev',\n  timeout: 1000\n})\n\nconst Container = styled.div`\n  padding: 10px;\n  width: 50vw;\n  height: 100vh;\n  background-color: gray;\n  margin: auto;\n  display: flex;\n  flex-wrap: wrap;\n  align-content: space-between;\n`\n\nconst MessageContainer = styled.div`\n  width: 100%;\n  margin: auto;\n  display: flex;\n  flex-wrap: wrap;\n  align-content: flex-start;\n`\n\nclass ChatbotContainer extends Component {\n  state = {\n    messages: [\n      {\n        text: 'Hola',\n        user: false\n      },\n      {\n        text: 'Hola!',\n        user: true\n      },\n      {\n        text: 'Que tal?',\n        user: false\n      }\n    ]\n  }\n\n  addMessage = async (text, user) => {\n    try {\n      const { data } = await client.post('/dialogflow', {\n        query: text,\n        sessionId: '1'\n      })\n      for(const msg of data) {\n        this.setState({ messages: this.state.messages.concat({ text: msg.message, user })})\n      }\n    } catch(err) {\n      console.error(err)\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <MessageContainer>\n          {this.state.messages.map(msg =>\n            <Message {...msg} />\n          )}\n        </MessageContainer>\n        <Input addMessage={this.addMessage} />\n      </Container>\n    )\n  }\n}\n\nexport default ChatbotContainer\n"]},"metadata":{},"sourceType":"module"}